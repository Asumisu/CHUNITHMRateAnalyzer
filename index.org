* CHUNITHM Rate Analyzer

CHUNITHM のレート上げのお供に！

- どの曲で何点出せばレートが上がるのか

- 今のスコアで出せる最大レート (BEST 枠１位のスコアを１０連続で出した場合)

などを簡単に調べられるツールです。

(計算方法は [[http://twitter.com/capue][@capue]] さんほかの調査によります)

** 注意
*** 対象譜面

レベル１１～１３＋で、ランクＡ以上が出ているもの (ランクＡを達成してい
ない譜面は未プレイ扱い)。

※レベル１１未満の曲がレートの対象に入っている方 (BEST レート 13 未満)
は正しく計算することができません。

*** スコア情報の取得について

このツールは CHUNITHM NET の内部で使われている URL に直接アクセスするこ
とでスコア情報を収集します。これが「通常想定し得ない方法」による、ある
いは「不正な」サービスの利用と解釈された場合、利用規約によってアカウン
ト停止等の処分が行われる可能性があります。

_ツールの性質を理解したうえで、各自の判断でご利用ください。このツールを
使用したことで起こったトラブルに作者は対応しません。_

なお、類似のツールの使用に対して何らかの対策が行われた場合、あるいは公
式に表明があった場合、これを類似ツールが「不正」であるという公式見解と
みなして公開を取り下げます。

** 使い方
*** インストール

#+HTML: <a href="javascript:(function()%7Bfunction%20callback()%7B(function(%24)%7Bvar%20jQuery%3D%24%3B%24(%22head%22).append(%22%3Cscript%20src%3D'http%3A%2F%2Fzk-phi.github.io%2FCHUNITHMRateAnalyzer%2Fchunithm.js'%3E%22)%7D)(jQuery.noConflict(true))%7Dvar%20s%3Ddocument.createElement(%22script%22)%3Bs.src%3D%22https%3A%2F%2Fajax.googleapis.com%2Fajax%2Flibs%2Fjquery%2F1.7.1%2Fjquery.min.js%22%3Bif(s.addEventListener)%7Bs.addEventListener(%22load%22%2Ccallback%2Cfalse)%7Delse%20if(s.readyState)%7Bs.onreadystatechange%3Dcallback%7Ddocument.body.appendChild(s)%3B%7D)()"> このリンク </a>

をお気に入りに追加 (ブックマークバーにドラッグ＆ドロップ or リンクをコ
ピーして貼り付け)。

※ IE 以外のブラウザでどうぞ (スマホでも動くらしい…？)

*** 起動

1. CHUNITHM NET にログイン

2. 利用権があることを確認

3. *CHUNITHM NET の画面を出したまま* 、保存しておいたリンクを開く

** 協力者求む！ (2016/04/09～)

*CHUNITHM Rate Analyzer は誰でも開発に参加できます* 。

曲の追加だけなら *プログラミングも不要* なので、新曲の追加時など、いち
早く最新のデータを配信するためにぜひ協力してください！

配信前に僕が簡単にチェックをするので、自信がなくても大丈夫です (いつも
協力してくれている方には、僕のチェックなしで即配信できる権限を渡す可能
性もあります)。

*** 曲データの追加方法

0. (GitHub のアカウントを取得)

1. CHUNITHM Rate Analyzer を fork (自分のアカウントにコピー) する

2. =chunithm.js= を開いて、曲リストの入っている場所を探す (100 行目あた
   り)

3. 曲リストの *一番後ろに* 新しい曲を追加する

   - 適当な曲データをコピペして、
   - =id= を新曲の ID に変更 (調べ方は後述)
   - =level= を 「赤譜面なら =2= / 紫譜面なら =3= 」 に変更
   - =rate_base= を新曲の譜面定数に変更
   - =name= を新曲の曲名 (赤譜面なら 曲名＋「赤」) に変更

4. =chunithm.js= を commit (保存) する

   - 「○○を追加」など、どこを変えたかわかるようなメモを残してください

5. pull request を送る

   - メッセージは適当（「追加しといたのでアプデよろしく」とか）で OK

僕に pull request が届いたら、大丈夫そうか簡単にチェックして、アップデー
トを配信します。

**** 曲 ID の確認方法

1. CHUNITHM NET にログイン

2. レコードを開いて、調べたい曲がリストに表示されている状態にする

3. 右クリック → 要素の検証

4. 調べたい曲のある場所を探す

** Q&A

- で、結局どうしたらレート上がるの？ ::
     BEST 枠 (上位３０曲) のスコアを伸ばすか、BEST 枠に入っていない曲を
     BEST 枠入りさせて BEST 枠平均を上げましょう。

- レートの仕組みを詳しく知りたい ::
     [[http://d.hatena.ne.jp/risette14/][リゼット (14 新) 推奨日記]] さんに詳しい考察があります。

- スコアがすべて 0 になってるんだけど？ ::
     CHUNITHM NET 利用権があるか確認してください。

# * 最近のアップデート
#
# - 2015.12.20 仮公開
#
# - 2015.12.22 スコア情報を WebStorage に保存しておくことで、次回から読み
#   込み処理をスキップできるようにした。スコアの読み込み処理中に閉じるボ
#   タンを押せないようにした。
#
# - 2015.12.24 エラー処理を少しマシに。見かけの微調整（アニメーション、曲
#   リストの曲間のすき間の広さ）など。
#
# - 2015.12.25 スコア取得画面から先に進まなくなることがあるバグを修正。
#
# - 2015.12.29 ランクボーダーで一つ下のランクとして扱われてしまうバグを修
#   正。
#
# - 2015.12.30 CHUNITHM NET 以外で開いた時に警告が出るようにした。
#
# - 2016.01.03 レートを上げるために必要なスコアを逆算できるようにした。理
#   論値を出してもレートが上がらない曲は非表示にした。ツイートボタンを設
#   置した。
#
# - 2016.01.06 DOM 構成とデザインを変更。ソート機能を追加。「(仮)」を取っ
#   て本公開。
#
# - 2016.01.07 バージョン情報を表示するようにした。新曲を追加。
#
# - 2016.01.17 "BEST枠レート" を "BEST枠平均" に改めた。無限にリトライし
#   てしまうバグを修正。
#
# - 2016.01.23 BEST 枠レート、最大レート、曲別レートなどの差分表示を実
#   装。レベルの見出しの位置を修正。アニメーションが原因のバグを修正。
#   新曲を追加。
#
# - 2016.01.25 RECENT枠平均も計算できるようになった。バージョンアップ
#   時には "前回のデータを見る" ができないようにした。
#
# - 2016.01.27 "必要スコア順" で BEST 枠の曲は難易度順に並べるようにし
#   た。
#
# - 2016.02.01 曲別レートの差分を webstorage に保存しないようにした ("
#   前回のスコアを表示" 時の挙動を全体レートとそろえた)。"スコアを取得"
#   後に更新があったスコアを上に配置するようにした。
#
# - 2016.02.03 未プレイ曲も表示されるようにした。難易度ソートの見出しを
#   修正。リファクタリング。
#
# - 2016.03.21 PLUS での難易度変更・新曲に対応完了
#
# - 2016.03.28 スコアソートを実装

** リンク

- [[http://d.hatena.ne.jp/risette14/][リゼット(14新)推奨日記]] ::
     このツールのもとになっている、レートのシステムや計算式、譜面定数の
     考察があります。

- [[http://www.ginjake.net/score/][チュウニズムスコアツール]] ::
     全譜面のスコアをまとめて一覧したり、他のプレーヤーと比較できるツー
     ル。スコア取得の仕組みを実装するときに参考にしました。
